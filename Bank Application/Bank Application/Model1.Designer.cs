//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model1", "PersonAccount", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Bank_Application.Person), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bank_Application.Account))]
[assembly: EdmRelationshipAttribute("Model1", "TypeAccount", "Type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Bank_Application.Type), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bank_Application.Account))]

#endregion

namespace Bank_Application
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Model1Container : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Model1Container object using the connection string found in the 'Model1Container' section of the application configuration file.
        /// </summary>
        public Model1Container() : base("name=Model1Container", "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Model1Container object.
        /// </summary>
        public Model1Container(string connectionString) : base(connectionString, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Model1Container object.
        /// </summary>
        public Model1Container(EntityConnection connection) : base(connection, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CD> CD
        {
            get
            {
                if ((_CD == null))
                {
                    _CD = base.CreateObjectSet<CD>("CD");
                }
                return _CD;
            }
        }
        private ObjectSet<CD> _CD;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Type> Type
        {
            get
            {
                if ((_Type == null))
                {
                    _Type = base.CreateObjectSet<Type>("Type");
                }
                return _Type;
            }
        }
        private ObjectSet<Type> _Type;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CD EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCD(CD cD)
        {
            base.AddObject("CD", cD);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Type EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToType(Type type)
        {
            base.AddObject("Type", type);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : Savings
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="cDId">Initial value of the CDId property.</param>
        /// <param name="maturityDate">Initial value of the MaturityDate property.</param>
        /// <param name="savingsId">Initial value of the SavingsId property.</param>
        /// <param name="rate">Initial value of the Rate property.</param>
        /// <param name="accountNumber">Initial value of the AccountNumber property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="owner">Initial value of the Owner property.</param>
        /// <param name="balance">Initial value of the Balance property.</param>
        public static Account CreateAccount(global::System.Int32 cDId, global::System.DateTime maturityDate, global::System.Int32 savingsId, global::System.Decimal rate, global::System.String accountNumber, global::System.String type, global::System.String status, global::System.String owner, global::System.Decimal balance)
        {
            Account account = new Account();
            account.CDId = cDId;
            account.MaturityDate = maturityDate;
            account.SavingsId = savingsId;
            account.Rate = rate;
            account.AccountNumber = accountNumber;
            account.Type = type;
            account.Status = status;
            account.Owner = owner;
            account.Balance = balance;
            return account;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountNumber
        {
            get
            {
                return _AccountNumber;
            }
            set
            {
                OnAccountNumberChanging(value);
                ReportPropertyChanging("AccountNumber");
                _AccountNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountNumber");
                OnAccountNumberChanged();
            }
        }
        private global::System.String _AccountNumber;
        partial void OnAccountNumberChanging(global::System.String value);
        partial void OnAccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private global::System.Decimal _Balance;
        partial void OnBalanceChanging(global::System.Decimal value);
        partial void OnBalanceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "PersonAccount", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("Model1.PersonAccount", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("Model1.PersonAccount", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("Model1.PersonAccount", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("Model1.PersonAccount", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "TypeAccount", "Type")]
        public Type Type_1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Type>("Model1.TypeAccount", "Type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Type>("Model1.TypeAccount", "Type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Type> Type_1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Type>("Model1.TypeAccount", "Type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Type>("Model1.TypeAccount", "Type", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="CD")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Savings))]
    public partial class CD : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CD object.
        /// </summary>
        /// <param name="cDId">Initial value of the CDId property.</param>
        /// <param name="maturityDate">Initial value of the MaturityDate property.</param>
        public static CD CreateCD(global::System.Int32 cDId, global::System.DateTime maturityDate)
        {
            CD cD = new CD();
            cD.CDId = cDId;
            cD.MaturityDate = maturityDate;
            return cD;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CDId
        {
            get
            {
                return _CDId;
            }
            set
            {
                if (_CDId != value)
                {
                    OnCDIdChanging(value);
                    ReportPropertyChanging("CDId");
                    _CDId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CDId");
                    OnCDIdChanged();
                }
            }
        }
        private global::System.Int32 _CDId;
        partial void OnCDIdChanging(global::System.Int32 value);
        partial void OnCDIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MaturityDate
        {
            get
            {
                return _MaturityDate;
            }
            set
            {
                OnMaturityDateChanging(value);
                ReportPropertyChanging("MaturityDate");
                _MaturityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaturityDate");
                OnMaturityDateChanged();
            }
        }
        private global::System.DateTime _MaturityDate;
        partial void OnMaturityDateChanging(global::System.DateTime value);
        partial void OnMaturityDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="sSN">Initial value of the SSN property.</param>
        /// <param name="fName">Initial value of the FName property.</param>
        /// <param name="lName">Initial value of the LName property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="pNumber">Initial value of the PNumber property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="mInitial">Initial value of the MInitial property.</param>
        public static Person CreatePerson(global::System.String sSN, global::System.String fName, global::System.String lName, global::System.String address, global::System.String city, global::System.String state, global::System.String pNumber, global::System.String email, global::System.String mInitial)
        {
            Person person = new Person();
            person.SSN = sSN;
            person.FName = fName;
            person.LName = lName;
            person.Address = address;
            person.City = city;
            person.State = state;
            person.PNumber = pNumber;
            person.Email = email;
            person.MInitial = mInitial;
            return person;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SSN
        {
            get
            {
                return _SSN;
            }
            set
            {
                if (_SSN != value)
                {
                    OnSSNChanging(value);
                    ReportPropertyChanging("SSN");
                    _SSN = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SSN");
                    OnSSNChanged();
                }
            }
        }
        private global::System.String _SSN;
        partial void OnSSNChanging(global::System.String value);
        partial void OnSSNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FName
        {
            get
            {
                return _FName;
            }
            set
            {
                OnFNameChanging(value);
                ReportPropertyChanging("FName");
                _FName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FName");
                OnFNameChanged();
            }
        }
        private global::System.String _FName;
        partial void OnFNameChanging(global::System.String value);
        partial void OnFNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LName
        {
            get
            {
                return _LName;
            }
            set
            {
                OnLNameChanging(value);
                ReportPropertyChanging("LName");
                _LName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LName");
                OnLNameChanged();
            }
        }
        private global::System.String _LName;
        partial void OnLNameChanging(global::System.String value);
        partial void OnLNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PNumber
        {
            get
            {
                return _PNumber;
            }
            set
            {
                OnPNumberChanging(value);
                ReportPropertyChanging("PNumber");
                _PNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PNumber");
                OnPNumberChanged();
            }
        }
        private global::System.String _PNumber;
        partial void OnPNumberChanging(global::System.String value);
        partial void OnPNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MInitial
        {
            get
            {
                return _MInitial;
            }
            set
            {
                OnMInitialChanging(value);
                ReportPropertyChanging("MInitial");
                _MInitial = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MInitial");
                OnMInitialChanged();
            }
        }
        private global::System.String _MInitial;
        partial void OnMInitialChanging(global::System.String value);
        partial void OnMInitialChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "PersonAccount", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("Model1.PersonAccount", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("Model1.PersonAccount", "Account", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Savings")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Account))]
    public partial class Savings : CD
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Savings object.
        /// </summary>
        /// <param name="cDId">Initial value of the CDId property.</param>
        /// <param name="maturityDate">Initial value of the MaturityDate property.</param>
        /// <param name="savingsId">Initial value of the SavingsId property.</param>
        /// <param name="rate">Initial value of the Rate property.</param>
        public static Savings CreateSavings(global::System.Int32 cDId, global::System.DateTime maturityDate, global::System.Int32 savingsId, global::System.Decimal rate)
        {
            Savings savings = new Savings();
            savings.CDId = cDId;
            savings.MaturityDate = maturityDate;
            savings.SavingsId = savingsId;
            savings.Rate = rate;
            return savings;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SavingsId
        {
            get
            {
                return _SavingsId;
            }
            set
            {
                OnSavingsIdChanging(value);
                ReportPropertyChanging("SavingsId");
                _SavingsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SavingsId");
                OnSavingsIdChanged();
            }
        }
        private global::System.Int32 _SavingsId;
        partial void OnSavingsIdChanging(global::System.Int32 value);
        partial void OnSavingsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private global::System.Decimal _Rate;
        partial void OnRateChanging(global::System.Decimal value);
        partial void OnRateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Type : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Type object.
        /// </summary>
        /// <param name="typeId">Initial value of the typeId property.</param>
        /// <param name="accountType">Initial value of the AccountType property.</param>
        public static Type CreateType(global::System.Int32 typeId, global::System.String accountType)
        {
            Type type = new Type();
            type.typeId = typeId;
            type.AccountType = accountType;
            return type;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 typeId
        {
            get
            {
                return _typeId;
            }
            set
            {
                if (_typeId != value)
                {
                    OntypeIdChanging(value);
                    ReportPropertyChanging("typeId");
                    _typeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("typeId");
                    OntypeIdChanged();
                }
            }
        }
        private global::System.Int32 _typeId;
        partial void OntypeIdChanging(global::System.Int32 value);
        partial void OntypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountType
        {
            get
            {
                return _AccountType;
            }
            set
            {
                OnAccountTypeChanging(value);
                ReportPropertyChanging("AccountType");
                _AccountType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountType");
                OnAccountTypeChanged();
            }
        }
        private global::System.String _AccountType;
        partial void OnAccountTypeChanging(global::System.String value);
        partial void OnAccountTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "TypeAccount", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("Model1.TypeAccount", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("Model1.TypeAccount", "Account", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
